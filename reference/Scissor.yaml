openapi: 3.1.0
x-stoplight:
  id: 0yt6n2s2mjd4z
info:
  title: Scissor
  version: '1.0'
  summary: A simple url shortener
  description: This is a fast and simple URL shortener built as a capstone project from AltSchool Africa.
  contact:
    name: Es Fortunatus
    email: fortunatusmicheal@gmail.com
  license:
    name: MIT
servers:
  - url: 'https://scissor-v4pd.onrender.com'
paths:
  /register:
    post:
      summary: Register
      operationId: post-register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                Example 1:
                  value:
                    email: janebakes@gmail.com
            application/xml:
              schema:
                type: object
                properties: {}
      description: This is the endpoint for registering a first-time user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              Example 1:
                value:
                  name: Jane
                  email: janebakes@gmail.com
                  password: Janebakes236!
  /login:
    post:
      summary: Login
      operationId: post-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                Example 1:
                  value:
                    email: janebakes@gmail.com
                    token: token
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
            text/html:
              schema:
                type: object
                properties: {}
      description: This endpoint logs in a registered user and provides a token in the response cookies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              Example 1:
                value:
                  email: janebakes@gmail.com
                  password: Janebakes236!
  /create:
    post:
      summary: Shorten url
      operationId: post-create
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                Example 1:
                  value:
                    urlId: jxPhc
                    user: new ObjectId("64a2ae1043ef0a3eb98bf6d2")
                    origUrl: 'https://www.dataquest.io/blog/web-scraping-python-using-beautiful-soup/'
                    shortUrl: 'https://scissor-v4pd.onrender.com/by-user/jxPhc'
                    clicks: 0
                    date: 03-Jul-2023
                    QRString: 'data:image/png;base64,...'
      description: This is the endpoint for shortening URLs from long URLs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              Example 1:
                value:
                  url: 'https://www.dataquest.io/blog/web-scraping-python-using-beautiful-soup/'
  /by-user:
    get:
      summary: User's dashboard
      tags: []
      responses:
        '200':
          description: OK
        '201':
          description: Created
      operationId: get-by-user
      description: gets all URLs created by an authenticated user. This is like a dashboard for viewing the history of all shortened URLs and tracking the analytics
      parameters:
        - schema:
            type: string
          in: cookie
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              Example 1:
                value: {}
  '/ScanQRCode/:id':
    get:
      summary: Scan/ Save QR Code
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                Example 1:
                  value:
                    QRString: 'data:image/png;base64,...'
      operationId: 'get-ScanQRCode-:id'
      description: This endpoint gets the generated QR Code of a specific shortened URL
  '/by-user/:id':
    get:
      summary: Redirects shortened url
      tags: []
      responses: {}
      operationId: 'get-by-user-:id'
      description: This endpoint redirects a specific shortened URL to its original URL
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
          x-stoplight:
            id: ize9bdbbq3kmr
        firstName:
          type: string
          x-stoplight:
            id: yb7w8rt2gtqjr
        lastName:
          type: string
          x-stoplight:
            id: kwt16nkcqu207
        email:
          type: string
          format: email
          x-stoplight:
            id: j1871jq8uj2ka
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
          x-stoplight:
            id: 9fyj5g3mxhz87
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
          x-stoplight:
            id: 6al35xa35l5wn
        createDate:
          type: string
          format: date
          description: The date that the user was created.
          x-stoplight:
            id: qp8xw097q0zih
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
      x-stoplight:
        id: gt89szc10rw9x
  securitySchemes:
    API Key - 1:
      name: API Key
      type: apiKey
      in: query
